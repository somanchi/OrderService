
plugins {
	id 'org.springframework.boot' version '2.6.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.8"

}
apply plugin: 'idea'

group = 'sh.radical'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

def queryDslVerision = "5.0.0"

ext {
	set('springCloudVersion', "2021.0.3")
}

def queryDslSourceDirectory = 'src/querydsl/java/generated'


querydsl {
	springDataMongo = true
	querydslSourcesDir = queryDslSourceDirectory
}

sourceSets {
	main {
		java {
			srcDir queryDslSourceDirectory
		}
	}
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	querydsl.extendsFrom compileClasspath
}


dependencyManagement {
	imports {
		mavenBom("org.springframework.cloud:spring-cloud-dependencies:${property("springCloudVersion")}")
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
	implementation("com.querydsl:querydsl-mongodb:${queryDslVerision}") {
		exclude group: 'org.mongodb', module: 'mongo-java-driver'
	}
	implementation "com.querydsl:querydsl-apt:${queryDslVerision}"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}
